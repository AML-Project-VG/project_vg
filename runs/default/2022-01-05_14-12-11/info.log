2022-01-05 14:12:12   Arguments: Namespace(cache_refresh_rate=1000, datasets_folder='./', device='cuda', epochs_num=50, exp_name='default', infer_batch_size=16, lr=1e-05, margin=0.1, neg_samples_num=1000, negs_num_per_query=10, num_workers=8, output_folder='runs/default/2022-01-05_14-12-11', patience=3, queries_per_epoch=5000, recall_values=[1, 5, 10, 20], seed=0, train_batch_size=4, train_positives_dist_threshold=10, use_netvlad='true', val_positive_dist_threshold=25)
2022-01-05 14:12:12   The outputs are being saved in runs/default/2022-01-05_14-12-11
2022-01-05 14:12:12   Using 1 GPUs and 6 CPUs
2022-01-05 14:12:14   There are 96 queries without any positives within the training set. They won't be considered as they're useless for training.
2022-01-05 14:12:14   Train query set: < TripletsDataset, pitts30k - #database: 10000; #queries: 7320 >
2022-01-05 14:12:17   Val set: < BaseDataset, pitts30k - #database: 10000; #queries: 7608 >
2022-01-05 14:12:19   Test set: < BaseDataset, pitts30k - #database: 10000; #queries: 6816 >
2022-01-05 14:12:22   Output dimension of the model is 256
2022-01-05 14:12:22   Start training epoch: 00
2022-01-05 14:12:27   
Traceback (most recent call last):
  File "train.py", line 70, in <module>
    triplets_ds.compute_triplets(args, model)
  File "/mnt/batch/tasks/shared/LS_root/mounts/clusters/amlmachine/code/project_vg/datasets_ws.py", line 206, in compute_triplets
    cache = self.compute_cache(args, model, subset_ds, (len(self), args.features_dim))
  File "/mnt/batch/tasks/shared/LS_root/mounts/clusters/amlmachine/code/project_vg/datasets_ws.py", line 166, in compute_cache
    features = model(images)
  File "/anaconda/envs/azureml_py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/mnt/batch/tasks/shared/LS_root/mounts/clusters/amlmachine/code/project_vg/network.py", line 27, in forward
    x = self.aggregation(x)
  File "/anaconda/envs/azureml_py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/mnt/batch/tasks/shared/LS_root/mounts/clusters/amlmachine/code/project_vg/netvlad.py", line 77, in forward
    soft_assign = self.conv(x).view(N, self.num_clusters, -1)
  File "/anaconda/envs/azureml_py38/lib/python3.8/site-packages/torch/nn/modules/module.py", line 727, in _call_impl
    result = self.forward(*input, **kwargs)
  File "/anaconda/envs/azureml_py38/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 423, in forward
    return self._conv_forward(input, self.weight)
  File "/anaconda/envs/azureml_py38/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 419, in _conv_forward
    return F.conv2d(input, weight, self.bias, self.stride,
RuntimeError: Given groups=1, weight of size [64, 128, 1, 1], expected input[16, 256, 30, 40] to have 128 channels, but got 256 channels instead

